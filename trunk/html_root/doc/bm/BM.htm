<HTML>
<HEAD>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=ISO-8859-1">
<TITLE>Untitled</TITLE>

<META NAME="GENERATOR" CONTENT="Internet Assistant for Microsoft Word 2.03z">
</HEAD>
<BODY>
<P>
<FONT SIZE=2>The BOYER-MOORE string search algorithm does its
character-by-character analysis from right-to-left through the
substring. It uses two realignment arrays to enhance its realignment
decisions. The first of these realignment arrays is indexed by
all the</FONT> <FONT SIZE=2>characters in the alphabet and uses
what is often called a</FONT> <FONT SIZE=2>&quot;mismatched character
heuristic&quot;:<BR>
</FONT>
<P>
<FONT SIZE=2>MMC[Ch] = length(Sub) if Ch not in Sub </FONT>
<P>
<FONT SIZE=2>Otherwise, MMC[Ch] = distance from the right end
of Sub to the </FONT>
<FONT SIZE=2>rightmost occurrence of Ch in Sub<BR>
</FONT>
<P>
<FONT SIZE=2>The second realignment array is indexed by the number
of</FONT> <FONT SIZE=2>characters in the substring and uses a
&quot;reverse&quot; KMP type of</FONT> <FONT SIZE=2>logic.<BR>
</FONT>
<P>
<FONT SIZE=2>RKMP[p]= 1 if p = length(Sub)</FONT>
<P>
<FONT SIZE=2>Otherwise, RKMP[p]= Suffix_length + Offset<BR>
</FONT>
<P>
<FONT SIZE=2>where Suffix_length is the length of the suffix of
Sub beginning</FONT> <FONT SIZE=2>at position p + 1, and offset
is the least amount that this</FONT> <FONT SIZE=2>suffix must
be moved to the left to match another occurrence of</FONT> <FONT SIZE=2>itself
in Sub, without matching the character in position p.<BR>
<BR>
</FONT>
<script src="http://www.google-analytics.com/urchin.js" type="text/javascript">
</script>
<script type="text/javascript">
_uacct = "UA-3174792-1";
urchinTracker();
</script>
</BODY>
</HTML>
